buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '1.5.10.RELEASE'
        springSocialVersion = '1.1.2.RELEASE'
        springSocialGoogleVersion = '1.0.0.RELEASE'
        hikariCPVersion = '2.7.6'
        jodaTimeVersion = '2.9.9'
        apacheCommonsVersion = '3:3.6'
        userTypeCoreVersion = '5.0.0.GA'
        jsonWebTokenVersion = '0.7.0'
        assertjCoreVersion = '1.5.0'
        seleniumVersion = '2.45.0'
        fluentleniumAssertjVersion = '0.10.3'
        seleniumChromedriverVersion = '2.53.0'
        webDriverManagerVersion = '1.4.5'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.anahoret'
version = '0.0.1'
sourceCompatibility = 1.8

jar {
    archiveName = 'lunchtime.jar'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
}

bootRun {
    jvmArgs = ["-DLC_CTYPE=UTF-8",
               "-Dfile.encoding=UTF-8"]
    addResources = true
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    }
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("com.zaxxer:HikariCP:$hikariCPVersion")
    compile('org.flywaydb:flyway-core')
    compile("io.jsonwebtoken:jjwt:$jsonWebTokenVersion")
    compile("joda-time:joda-time:$jodaTimeVersion")
    compile("org.apache.commons:commons-lang$apacheCommonsVersion")
    compile("org.jadira.usertype:usertype.core:$userTypeCoreVersion") // Should match Hibernate version
    compile('org.springframework.boot:spring-boot-starter-websocket')
    compile("org.springframework.social:spring-social-security:$springSocialVersion")
    compile("org.springframework.social:spring-social-config:$springSocialVersion")
    compile("org.springframework.social:spring-social-google:$springSocialGoogleVersion")
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.assertj:assertj-core:$assertjCoreVersion")
    testCompile("org.seleniumhq.selenium:selenium-java:$seleniumVersion")
    testCompile("org.fluentlenium:fluentlenium-assertj:$fluentleniumAssertjVersion")
    testCompile("junit:junit")
    testCompile("org.seleniumhq.selenium:selenium-chrome-driver:$seleniumChromedriverVersion")
    testCompile("io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion")
    testCompile("org.springframework.security:spring-security-test")
}
